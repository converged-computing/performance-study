-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 13209 microseconds.
   (= 13209 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           10996.6     0.020282     0.014550     0.037293
Scale:          10389.7     0.021262     0.015400     0.037518
Add:            11915.9     0.029735     0.020141     0.054006
Triad:          12018.6     0.028945     0.019969     0.053348
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 24523 microseconds.
   (= 24523 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           11055.1     0.022891     0.014473     0.036439
Scale:           9955.2     0.024789     0.016072     0.036268
Add:            11561.3     0.030842     0.020759     0.053979
Triad:          11724.9     0.032670     0.020469     0.054075
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 24868 microseconds.
   (= 24868 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            8845.2     0.032404     0.018089     0.037769
Scale:           7450.2     0.032834     0.021476     0.036714
Add:            10849.9     0.043953     0.022120     0.054803
Triad:           8515.8     0.042581     0.028183     0.053602
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 24708 microseconds.
   (= 24708 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            9866.8     0.031847     0.016216     0.037459
Scale:           7864.4     0.031291     0.020345     0.036705
Add:            11210.7     0.043540     0.021408     0.052577
Triad:          11994.6     0.043914     0.020009     0.054306
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 24655 microseconds.
   (= 24655 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            7601.6     0.032356     0.021048     0.037117
Scale:           8611.9     0.031666     0.018579     0.036750
Add:            10431.2     0.046733     0.023008     0.053911
Triad:          13654.8     0.045570     0.017576     0.054495
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 19499 microseconds.
   (= 19499 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            5954.0     0.032206     0.026873     0.036479
Scale:           5810.3     0.033118     0.027537     0.037448
Add:             6092.0     0.046869     0.039396     0.053826
Triad:           6269.1     0.045100     0.038283     0.051695
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
-------------------------------------------------------------
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
-------------------------------------------------------------
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 22471 microseconds.
Each test below will take on the order of 21996 microseconds.
   (= 22471 clock ticks)
   (= 21996 clock ticks)
Increase the size of the arrays if this shows that
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
For best results, please be sure you know the
precision of your system timer.
precision of your system timer.
-------------------------------------------------------------
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            5889.3     0.033122     0.027168     0.037419
Copy:            5873.0     0.032976     0.027243     0.037552
Scale:           5783.1     0.032849     0.027667     0.037373
Scale:           5795.8     0.032882     0.027606     0.037378
Add:             6302.1     0.045851     0.038083     0.052288
Add:             6177.9     0.046527     0.038848     0.053135
Triad:           6298.4     0.045093     0.038105     0.052641
Triad:           6311.5     0.044967     0.038026     0.052250
-------------------------------------------------------------
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 28284 microseconds.
   (= 28284 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            4738.4     0.041582     0.033767     0.046501
Scale:           4862.0     0.041846     0.032908     0.047003
Add:             5295.1     0.056834     0.045325     0.065764
Triad:           5306.6     0.055698     0.045227     0.062748
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 28646 microseconds.
   (= 28646 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            4986.8     0.041823     0.032085     0.046740
Scale:           4798.2     0.042152     0.033346     0.047260
Add:             5261.1     0.056479     0.045618     0.065442
Triad:           5339.5     0.055792     0.044948     0.062627
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
-------------------------------------------------------------
This system uses 8 bytes per array element.
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
This system uses 8 bytes per array element.
Memory per array = 76.3 MiB (= 0.1 GiB).
-------------------------------------------------------------
Total memory required = 228.9 MiB (= 0.2 GiB).
Array size = 10000000 (elements), Offset = 0 (elements)
-------------------------------------------------------------
Each kernel will be executed 10 times.
Memory per array = 76.3 MiB (= 0.1 GiB).
STREAM version $Revision: 5.10 $
 The *best* time for each kernel (excluding the first iteration)
Total memory required = 228.9 MiB (= 0.2 GiB).
-------------------------------------------------------------
 will be used to compute the reported bandwidth.
Each kernel will be executed 10 times.
This system uses 8 bytes per array element.
-------------------------------------------------------------
 The *best* time for each kernel (excluding the first iteration)
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
 will be used to compute the reported bandwidth.
Array size = 10000000 (elements), Offset = 0 (elements)
Each test below will take on the order of 28727 microseconds.
-------------------------------------------------------------
Memory per array = 76.3 MiB (= 0.1 GiB).
   (= 28727 clock ticks)
Your clock granularity/precision appears to be 1 microseconds.
Total memory required = 228.9 MiB (= 0.2 GiB).
Increase the size of the arrays if this shows that
Each test below will take on the order of 28420 microseconds.
Each kernel will be executed 10 times.
you are not getting at least 20 clock ticks per test.
   (= 28420 clock ticks)
 The *best* time for each kernel (excluding the first iteration)
-------------------------------------------------------------
Increase the size of the arrays if this shows that
 will be used to compute the reported bandwidth.
WARNING -- The above is only a rough guideline.
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
For best results, please be sure you know the
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
precision of your system timer.
WARNING -- The above is only a rough guideline.
Each test below will take on the order of 28596 microseconds.
-------------------------------------------------------------
For best results, please be sure you know the
   (= 28596 clock ticks)
Function    Best Rate MB/s  Avg time     Min time     Max time
precision of your system timer.
Increase the size of the arrays if this shows that
Copy:            4798.5     0.041578     0.033344     0.046836
-------------------------------------------------------------
you are not getting at least 20 clock ticks per test.
Scale:           4798.9     0.042253     0.033341     0.047187
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
-------------------------------------------------------------
Add:             5278.1     0.056391     0.045471     0.065715
STREAM version $Revision: 5.10 $
Copy:            4951.6     0.041177     0.032313     0.046471
WARNING -- The above is only a rough guideline.
Triad:           5300.2     0.056058     0.045281     0.062912
-------------------------------------------------------------
Scale:           4813.6     0.041865     0.033239     0.047083
For best results, please be sure you know the
-------------------------------------------------------------
This system uses 8 bytes per array element.
Add:             5003.3     0.057465     0.047968     0.065856
precision of your system timer.
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
Triad:           5076.4     0.056412     0.047278     0.062940
-------------------------------------------------------------
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Memory per array = 76.3 MiB (= 0.1 GiB).
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Copy:            4818.7     0.041667     0.033204     0.046946
Total memory required = 228.9 MiB (= 0.2 GiB).
-------------------------------------------------------------
Scale:           4796.9     0.042248     0.033355     0.047255
Each kernel will be executed 10 times.
Add:             5253.1     0.056425     0.045687     0.065799
 The *best* time for each kernel (excluding the first iteration)
Triad:           5265.7     0.056078     0.045578     0.062892
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Your clock granularity/precision appears to be 1 microseconds.
-------------------------------------------------------------
Each test below will take on the order of 28778 microseconds.
   (= 28778 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            4938.9     0.041641     0.032396     0.046738
Scale:           4760.5     0.042209     0.033610     0.047086
Add:             5015.7     0.057105     0.047850     0.065472
Triad:           5101.4     0.056590     0.047046     0.063040
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 28418 microseconds.
   (= 28418 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
WARNING -- The above is only a rough guideline.
-------------------------------------------------------------
For best results, please be sure you know the
This system uses 8 bytes per array element.
precision of your system timer.
-------------------------------------------------------------
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Function    Best Rate MB/s  Avg time     Min time     Max time
Memory per array = 76.3 MiB (= 0.1 GiB).
Copy:            4905.4     0.041513     0.032617     0.046836
Total memory required = 228.9 MiB (= 0.2 GiB).
Scale:           4766.9     0.042300     0.033565     0.047309
Each kernel will be executed 10 times.
Add:             4967.9     0.057333     0.048310     0.065747
 The *best* time for each kernel (excluding the first iteration)
Triad:           5073.8     0.056762     0.047302     0.062840
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Your clock granularity/precision appears to be 1 microseconds.
-------------------------------------------------------------
Each test below will take on the order of 28697 microseconds.
   (= 28697 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            4761.5     0.042008     0.033603     0.047166
Scale:           4744.7     0.042261     0.033722     0.047054
Add:             4982.0     0.057160     0.048174     0.065703
Triad:           5164.2     0.056638     0.046474     0.062795
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 29424 microseconds.
   (= 29424 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            4740.2     0.041174     0.033754     0.046533
Scale:           4716.6     0.041833     0.033923     0.047366
Add:             5468.6     0.057929     0.043887     0.066206
Triad:           5247.5     0.056836     0.045736     0.065056
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
STREAM version $Revision: 5.10 $
Memory per array = 76.3 MiB (= 0.1 GiB).
-------------------------------------------------------------
Total memory required = 228.9 MiB (= 0.2 GiB).
This system uses 8 bytes per array element.
Each kernel will be executed 10 times.
-------------------------------------------------------------
 The *best* time for each kernel (excluding the first iteration)
Array size = 10000000 (elements), Offset = 0 (elements)
 will be used to compute the reported bandwidth.
Memory per array = 76.3 MiB (= 0.1 GiB).
-------------------------------------------------------------
Total memory required = 228.9 MiB (= 0.2 GiB).
Your clock granularity/precision appears to be 1 microseconds.
Each kernel will be executed 10 times.
Each test below will take on the order of 30275 microseconds.
 The *best* time for each kernel (excluding the first iteration)
   (= 30275 clock ticks)
 will be used to compute the reported bandwidth.
Increase the size of the arrays if this shows that
-------------------------------------------------------------
you are not getting at least 20 clock ticks per test.
Your clock granularity/precision appears to be 1 microseconds.
-------------------------------------------------------------
Each test below will take on the order of 30298 microseconds.
WARNING -- The above is only a rough guideline.
   (= 30298 clock ticks)
For best results, please be sure you know the
Increase the size of the arrays if this shows that
precision of your system timer.
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
WARNING -- The above is only a rough guideline.
-------------------------------------------------------------
Copy:            4805.8     0.041645     0.033293     0.047144
For best results, please be sure you know the
STREAM version $Revision: 5.10 $
Scale:           4768.7     0.041177     0.033552     0.046707
precision of your system timer.
-------------------------------------------------------------
Add:             5582.7     0.056837     0.042990     0.065289
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
This system uses 8 bytes per array element.
Triad:           5255.8     0.057051     0.045664     0.065611
Function    Best Rate MB/s  Avg time     Min time     Max time
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
-------------------------------------------------------------
Copy:            4771.1     0.041251     0.033535     0.046809
-------------------------------------------------------------
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Scale:           4736.1     0.041513     0.033783     0.047310
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
Memory per array = 76.3 MiB (= 0.1 GiB).
-------------------------------------------------------------
Add:             5381.2     0.057423     0.044600     0.065357
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
Total memory required = 228.9 MiB (= 0.2 GiB).
Triad:           5056.1     0.057109     0.047467     0.064835
Array size = 10000000 (elements), Offset = 0 (elements)
STREAM version $Revision: 5.10 $
Array size = 10000000 (elements), Offset = 0 (elements)
Each kernel will be executed 10 times.
-------------------------------------------------------------
Memory per array = 76.3 MiB (= 0.1 GiB).
-------------------------------------------------------------
Memory per array = 76.3 MiB (= 0.1 GiB).
 The *best* time for each kernel (excluding the first iteration)
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Total memory required = 228.9 MiB (= 0.2 GiB).
This system uses 8 bytes per array element.
Total memory required = 228.9 MiB (= 0.2 GiB).
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Each kernel will be executed 10 times.
-------------------------------------------------------------
Each kernel will be executed 10 times.
-------------------------------------------------------------
 The *best* time for each kernel (excluding the first iteration)
Array size = 10000000 (elements), Offset = 0 (elements)
 The *best* time for each kernel (excluding the first iteration)
Your clock granularity/precision appears to be 1 microseconds.
 will be used to compute the reported bandwidth.
Memory per array = 76.3 MiB (= 0.1 GiB).
 will be used to compute the reported bandwidth.
Each test below will take on the order of 30230 microseconds.
-------------------------------------------------------------
Total memory required = 228.9 MiB (= 0.2 GiB).
-------------------------------------------------------------
   (= 30230 clock ticks)
Your clock granularity/precision appears to be 1 microseconds.
Each kernel will be executed 10 times.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Increase the size of the arrays if this shows that
Each test below will take on the order of 30320 microseconds.
 The *best* time for each kernel (excluding the first iteration)
STREAM version $Revision: 5.10 $
Each test below will take on the order of 30169 microseconds.
you are not getting at least 20 clock ticks per test.
   (= 30320 clock ticks)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
   (= 30169 clock ticks)
-------------------------------------------------------------
Increase the size of the arrays if this shows that
-------------------------------------------------------------
This system uses 8 bytes per array element.
Increase the size of the arrays if this shows that
WARNING -- The above is only a rough guideline.
you are not getting at least 20 clock ticks per test.
Your clock granularity/precision appears to be 1 microseconds.
-------------------------------------------------------------
you are not getting at least 20 clock ticks per test.
For best results, please be sure you know the
-------------------------------------------------------------
Each test below will take on the order of 30253 microseconds.
Array size = 10000000 (elements), Offset = 0 (elements)
-------------------------------------------------------------
precision of your system timer.
WARNING -- The above is only a rough guideline.
   (= 30253 clock ticks)
Memory per array = 76.3 MiB (= 0.1 GiB).
WARNING -- The above is only a rough guideline.
-------------------------------------------------------------
For best results, please be sure you know the
Increase the size of the arrays if this shows that
Total memory required = 228.9 MiB (= 0.2 GiB).
For best results, please be sure you know the
Function    Best Rate MB/s  Avg time     Min time     Max time
precision of your system timer.
you are not getting at least 20 clock ticks per test.
Each kernel will be executed 10 times.
precision of your system timer.
Copy:            4700.5     0.041162     0.034039     0.046583
-------------------------------------------------------------
-------------------------------------------------------------
 The *best* time for each kernel (excluding the first iteration)
-------------------------------------------------------------
Scale:           4732.2     0.041590     0.033811     0.047197
Function    Best Rate MB/s  Avg time     Min time     Max time
WARNING -- The above is only a rough guideline.
 will be used to compute the reported bandwidth.
Function    Best Rate MB/s  Avg time     Min time     Max time
Add:             5369.1     0.057485     0.044700     0.066343
Copy:            4792.7     0.041295     0.033384     0.046966
For best results, please be sure you know the
-------------------------------------------------------------
Copy:            4755.2     0.040855     0.033647     0.046321
Triad:           5109.3     0.057149     0.046973     0.064876
Scale:           4717.7     0.041423     0.033915     0.046908
precision of your system timer.
Your clock granularity/precision appears to be 1 microseconds.
Scale:           4718.8     0.041735     0.033907     0.047204
-------------------------------------------------------------
Add:             4976.4     0.059187     0.048228     0.065644
-------------------------------------------------------------
Each test below will take on the order of 26567 microseconds.
Add:             5322.2     0.058430     0.045094     0.066234
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Triad:           5205.2     0.057074     0.046108     0.064934
Function    Best Rate MB/s  Avg time     Min time     Max time
   (= 26567 clock ticks)
Triad:           5166.8     0.057205     0.046450     0.065092
-------------------------------------------------------------
-------------------------------------------------------------
Copy:            4733.9     0.041673     0.033799     0.047170
Increase the size of the arrays if this shows that
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Scale:           4766.9     0.041504     0.033565     0.047076
you are not getting at least 20 clock ticks per test.
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
Add:             5558.9     0.057944     0.043174     0.066315
-------------------------------------------------------------
-------------------------------------------------------------
Triad:           5221.3     0.057065     0.045965     0.065382
WARNING -- The above is only a rough guideline.
-------------------------------------------------------------
For best results, please be sure you know the
Solution Validates: avg error less than 1.000000e-13 on all three arrays
precision of your system timer.
-------------------------------------------------------------
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            4817.7     0.041641     0.033211     0.047493
Scale:           4905.4     0.040431     0.032617     0.045929
Add:             5369.7     0.057987     0.044695     0.065355
Triad:           5547.9     0.056948     0.043260     0.066601
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
-------------------------------------------------------------
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
This system uses 8 bytes per array element.
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
-------------------------------------------------------------
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Array size = 10000000 (elements), Offset = 0 (elements)
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
Total memory required = 228.9 MiB (= 0.2 GiB).
 The *best* time for each kernel (excluding the first iteration)
 The *best* time for each kernel (excluding the first iteration)
 The *best* time for each kernel (excluding the first iteration)
 The *best* time for each kernel (excluding the first iteration)
 The *best* time for each kernel (excluding the first iteration)
 The *best* time for each kernel (excluding the first iteration)
 The *best* time for each kernel (excluding the first iteration)
 The *best* time for each kernel (excluding the first iteration)
 The *best* time for each kernel (excluding the first iteration)
 The *best* time for each kernel (excluding the first iteration)
 The *best* time for each kernel (excluding the first iteration)
 The *best* time for each kernel (excluding the first iteration)
 The *best* time for each kernel (excluding the first iteration)
 The *best* time for each kernel (excluding the first iteration)
 The *best* time for each kernel (excluding the first iteration)
 The *best* time for each kernel (excluding the first iteration)
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 The *best* time for each kernel (excluding the first iteration)
 The *best* time for each kernel (excluding the first iteration)
 The *best* time for each kernel (excluding the first iteration)
 The *best* time for each kernel (excluding the first iteration)
 The *best* time for each kernel (excluding the first iteration)
Each kernel will be executed 10 times.
 will be used to compute the reported bandwidth.
 will be used to compute the reported bandwidth.
 will be used to compute the reported bandwidth.
 will be used to compute the reported bandwidth.
 will be used to compute the reported bandwidth.
 will be used to compute the reported bandwidth.
 will be used to compute the reported bandwidth.
 will be used to compute the reported bandwidth.
 will be used to compute the reported bandwidth.
 will be used to compute the reported bandwidth.
 will be used to compute the reported bandwidth.
 will be used to compute the reported bandwidth.
 will be used to compute the reported bandwidth.
 will be used to compute the reported bandwidth.
 will be used to compute the reported bandwidth.
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
 will be used to compute the reported bandwidth.
 will be used to compute the reported bandwidth.
 will be used to compute the reported bandwidth.
 will be used to compute the reported bandwidth.
 will be used to compute the reported bandwidth.
 The *best* time for each kernel (excluding the first iteration)
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
 will be used to compute the reported bandwidth.
Your clock granularity/precision appears to be 1 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
-------------------------------------------------------------
Each test below will take on the order of 27964 microseconds.
Each test below will take on the order of 27436 microseconds.
Each test below will take on the order of 21593 microseconds.
Each test below will take on the order of 22396 microseconds.
Each test below will take on the order of 22256 microseconds.
Each test below will take on the order of 24141 microseconds.
Each test below will take on the order of 26277 microseconds.
Each test below will take on the order of 23241 microseconds.
Each test below will take on the order of 30726 microseconds.
Each test below will take on the order of 30703 microseconds.
Each test below will take on the order of 30292 microseconds.
Each test below will take on the order of 30395 microseconds.
Each test below will take on the order of 30599 microseconds.
Each test below will take on the order of 30922 microseconds.
Each test below will take on the order of 30503 microseconds.
Each test below will take on the order of 30519 microseconds.
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 30483 microseconds.
Each test below will take on the order of 30816 microseconds.
Each test below will take on the order of 30817 microseconds.
Each test below will take on the order of 30230 microseconds.
Each test below will take on the order of 30387 microseconds.
Each test below will take on the order of 30109 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
   (= 27964 clock ticks)
   (= 27436 clock ticks)
   (= 21593 clock ticks)
   (= 22396 clock ticks)
   (= 22256 clock ticks)
   (= 24141 clock ticks)
   (= 26277 clock ticks)
   (= 23241 clock ticks)
   (= 30726 clock ticks)
   (= 30703 clock ticks)
   (= 30292 clock ticks)
   (= 30395 clock ticks)
   (= 30599 clock ticks)
   (= 30922 clock ticks)
   (= 30503 clock ticks)
   (= 30519 clock ticks)
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
Each test below will take on the order of 30961 microseconds.
   (= 30483 clock ticks)
   (= 30816 clock ticks)
   (= 30817 clock ticks)
   (= 30230 clock ticks)
   (= 30387 clock ticks)
   (= 30109 clock ticks)
Each test below will take on the order of 30812 microseconds.
Increase the size of the arrays if this shows that
Increase the size of the arrays if this shows that
Increase the size of the arrays if this shows that
Increase the size of the arrays if this shows that
Increase the size of the arrays if this shows that
Increase the size of the arrays if this shows that
Increase the size of the arrays if this shows that
Increase the size of the arrays if this shows that
Increase the size of the arrays if this shows that
Increase the size of the arrays if this shows that
Increase the size of the arrays if this shows that
Increase the size of the arrays if this shows that
Increase the size of the arrays if this shows that
Increase the size of the arrays if this shows that
Increase the size of the arrays if this shows that
Increase the size of the arrays if this shows that
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
   (= 30961 clock ticks)
Increase the size of the arrays if this shows that
Increase the size of the arrays if this shows that
Increase the size of the arrays if this shows that
Increase the size of the arrays if this shows that
Increase the size of the arrays if this shows that
Increase the size of the arrays if this shows that
   (= 30812 clock ticks)
you are not getting at least 20 clock ticks per test.
you are not getting at least 20 clock ticks per test.
you are not getting at least 20 clock ticks per test.
you are not getting at least 20 clock ticks per test.
you are not getting at least 20 clock ticks per test.
you are not getting at least 20 clock ticks per test.
you are not getting at least 20 clock ticks per test.
you are not getting at least 20 clock ticks per test.
you are not getting at least 20 clock ticks per test.
you are not getting at least 20 clock ticks per test.
you are not getting at least 20 clock ticks per test.
you are not getting at least 20 clock ticks per test.
you are not getting at least 20 clock ticks per test.
you are not getting at least 20 clock ticks per test.
you are not getting at least 20 clock ticks per test.
you are not getting at least 20 clock ticks per test.
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
you are not getting at least 20 clock ticks per test.
you are not getting at least 20 clock ticks per test.
you are not getting at least 20 clock ticks per test.
you are not getting at least 20 clock ticks per test.
you are not getting at least 20 clock ticks per test.
Increase the size of the arrays if this shows that
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
you are not getting at least 20 clock ticks per test.
WARNING -- The above is only a rough guideline.
WARNING -- The above is only a rough guideline.
WARNING -- The above is only a rough guideline.
WARNING -- The above is only a rough guideline.
WARNING -- The above is only a rough guideline.
WARNING -- The above is only a rough guideline.
WARNING -- The above is only a rough guideline.
WARNING -- The above is only a rough guideline.
WARNING -- The above is only a rough guideline.
WARNING -- The above is only a rough guideline.
WARNING -- The above is only a rough guideline.
WARNING -- The above is only a rough guideline.
WARNING -- The above is only a rough guideline.
WARNING -- The above is only a rough guideline.
WARNING -- The above is only a rough guideline.
WARNING -- The above is only a rough guideline.
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
WARNING -- The above is only a rough guideline.
WARNING -- The above is only a rough guideline.
WARNING -- The above is only a rough guideline.
WARNING -- The above is only a rough guideline.
WARNING -- The above is only a rough guideline.
-------------------------------------------------------------
For best results, please be sure you know the
For best results, please be sure you know the
For best results, please be sure you know the
For best results, please be sure you know the
For best results, please be sure you know the
For best results, please be sure you know the
For best results, please be sure you know the
For best results, please be sure you know the
For best results, please be sure you know the
For best results, please be sure you know the
For best results, please be sure you know the
For best results, please be sure you know the
For best results, please be sure you know the
For best results, please be sure you know the
For best results, please be sure you know the
For best results, please be sure you know the
 The *best* time for each kernel (excluding the first iteration)
 The *best* time for each kernel (excluding the first iteration)
 The *best* time for each kernel (excluding the first iteration)
 The *best* time for each kernel (excluding the first iteration)
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
For best results, please be sure you know the
For best results, please be sure you know the
For best results, please be sure you know the
For best results, please be sure you know the
For best results, please be sure you know the
WARNING -- The above is only a rough guideline.
precision of your system timer.
precision of your system timer.
precision of your system timer.
precision of your system timer.
precision of your system timer.
precision of your system timer.
precision of your system timer.
precision of your system timer.
precision of your system timer.
precision of your system timer.
precision of your system timer.
precision of your system timer.
precision of your system timer.
precision of your system timer.
precision of your system timer.
precision of your system timer.
 will be used to compute the reported bandwidth.
 will be used to compute the reported bandwidth.
 will be used to compute the reported bandwidth.
 will be used to compute the reported bandwidth.
For best results, please be sure you know the
precision of your system timer.
precision of your system timer.
precision of your system timer.
precision of your system timer.
precision of your system timer.
precision of your system timer.
For best results, please be sure you know the
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
precision of your system timer.
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
precision of your system timer.
Function    Best Rate MB/s  Avg time     Min time     Max time
Function    Best Rate MB/s  Avg time     Min time     Max time
Function    Best Rate MB/s  Avg time     Min time     Max time
Function    Best Rate MB/s  Avg time     Min time     Max time
Function    Best Rate MB/s  Avg time     Min time     Max time
Function    Best Rate MB/s  Avg time     Min time     Max time
Function    Best Rate MB/s  Avg time     Min time     Max time
Function    Best Rate MB/s  Avg time     Min time     Max time
Function    Best Rate MB/s  Avg time     Min time     Max time
Function    Best Rate MB/s  Avg time     Min time     Max time
Function    Best Rate MB/s  Avg time     Min time     Max time
Function    Best Rate MB/s  Avg time     Min time     Max time
Function    Best Rate MB/s  Avg time     Min time     Max time
Function    Best Rate MB/s  Avg time     Min time     Max time
Function    Best Rate MB/s  Avg time     Min time     Max time
Function    Best Rate MB/s  Avg time     Min time     Max time
Your clock granularity/precision appears to be 1 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Function    Best Rate MB/s  Avg time     Min time     Max time
Function    Best Rate MB/s  Avg time     Min time     Max time
Function    Best Rate MB/s  Avg time     Min time     Max time
Function    Best Rate MB/s  Avg time     Min time     Max time
Function    Best Rate MB/s  Avg time     Min time     Max time
-------------------------------------------------------------
Copy:            4073.4     0.044240     0.039279     0.047060
Copy:            4096.9     0.043822     0.039054     0.047006
Copy:            4213.6     0.042657     0.037972     0.045510
Copy:            4227.9     0.042655     0.037844     0.045608
Copy:            4152.1     0.043063     0.038535     0.045927
Copy:            4119.5     0.043368     0.038840     0.046355
Copy:            4076.9     0.043835     0.039245     0.046881
Copy:            4125.1     0.043423     0.038787     0.046114
Copy:            4018.1     0.044144     0.039820     0.047068
Copy:            4031.3     0.044082     0.039689     0.046993
Copy:            4072.1     0.043687     0.039292     0.046546
Copy:            4048.7     0.043904     0.039519     0.046648
Copy:            4052.6     0.043961     0.039481     0.047004
Copy:            4055.6     0.043943     0.039452     0.046841
Copy:            4090.1     0.043710     0.039119     0.046824
Copy:            4086.6     0.043708     0.039152     0.046835
Each test below will take on the order of 32723 microseconds.
Each test below will take on the order of 32740 microseconds.
Each test below will take on the order of 32153 microseconds.
Each test below will take on the order of 32466 microseconds.
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            4078.5     0.043792     0.039230     0.046649
Copy:            4058.0     0.044017     0.039428     0.046968
Copy:            4052.1     0.044026     0.039486     0.047056
Copy:            4112.1     0.043544     0.038910     0.046525
Copy:            4091.9     0.043908     0.039102     0.046917
Copy:            4109.2     0.043663     0.038937     0.046686
Function    Best Rate MB/s  Avg time     Min time     Max time
Scale:           4164.7     0.043216     0.038418     0.045902
Scale:           4088.2     0.043815     0.039137     0.046414
Scale:           4069.0     0.044145     0.039322     0.047378
Scale:           4062.6     0.044127     0.039384     0.047133
Scale:           4103.1     0.044018     0.038995     0.047054
Scale:           4088.9     0.044104     0.039130     0.046884
Scale:           4145.1     0.043151     0.038600     0.045861
Scale:           4091.4     0.044236     0.039107     0.047274
Scale:           4076.6     0.044047     0.039248     0.047336
Scale:           4087.3     0.044083     0.039146     0.047200
Scale:           4046.2     0.044244     0.039543     0.047243
Scale:           4055.8     0.044291     0.039450     0.047255
Scale:           4070.1     0.044015     0.039311     0.046915
Scale:           4050.4     0.044065     0.039502     0.046809
Scale:           4059.5     0.044105     0.039414     0.047166
Scale:           4035.5     0.044118     0.039648     0.046718
   (= 32723 clock ticks)
   (= 32740 clock ticks)
   (= 32153 clock ticks)
   (= 32466 clock ticks)
Copy:            3995.4     0.044670     0.040046     0.047477
Scale:           4077.5     0.044274     0.039240     0.047381
Scale:           4084.9     0.044135     0.039169     0.047341
Scale:           4065.8     0.044150     0.039353     0.047364
Scale:           4038.0     0.044175     0.039624     0.047232
Scale:           4089.8     0.044026     0.039122     0.047146
Scale:           4051.8     0.044268     0.039489     0.047392
Copy:            3981.3     0.044707     0.040188     0.047486
Add:             4476.3     0.061458     0.053616     0.065992
Add:             4421.2     0.061825     0.054284     0.066214
Add:             4290.1     0.062928     0.055943     0.067119
Add:             4291.5     0.062667     0.055925     0.066863
Add:             4300.2     0.062455     0.055812     0.066534
Add:             4363.6     0.062092     0.055000     0.066257
Add:             4367.3     0.061479     0.054954     0.065640
Add:             4374.9     0.062098     0.054858     0.066153
-------------------------------------------------------------
Add:             5175.1     0.058528     0.046376     0.064018
Add:             5128.2     0.058613     0.046800     0.063994
Add:             4736.3     0.059260     0.050672     0.064494
Add:             4844.0     0.059037     0.049546     0.064190
Add:             4671.8     0.058976     0.051372     0.064265
Add:             5136.1     0.058542     0.046728     0.064112
Add:             4451.3     0.059612     0.053917     0.064701
Add:             4906.4     0.058839     0.048916     0.064242
Increase the size of the arrays if this shows that
Increase the size of the arrays if this shows that
Increase the size of the arrays if this shows that
Increase the size of the arrays if this shows that
Scale:           4240.3     0.043358     0.037733     0.047015
Add:             5076.4     0.059115     0.047278     0.064299
Add:             5010.9     0.059023     0.047896     0.063957
Add:             5066.8     0.058975     0.047367     0.064247
Add:             4789.3     0.059257     0.050112     0.064436
Add:             5178.3     0.058872     0.046347     0.064099
Add:             4836.8     0.059300     0.049620     0.064538
Scale:           4221.6     0.043365     0.037900     0.047360
Triad:           6255.5     0.059769     0.038366     0.067078
Triad:           5514.1     0.059688     0.043525     0.066211
Triad:           4533.4     0.060778     0.052940     0.065835
Triad:           4581.6     0.060574     0.052384     0.065563
Triad:           4605.3     0.060734     0.052114     0.065618
Triad:           4716.5     0.060391     0.050885     0.065326
Triad:           5293.8     0.059975     0.045336     0.065814
Triad:           4638.8     0.060559     0.051738     0.065614
STREAM version $Revision: 5.10 $
Triad:           6568.0     0.058222     0.036541     0.063904
Triad:           6486.5     0.058201     0.037000     0.063752
Triad:           6165.4     0.058114     0.038927     0.063349
Triad:           6134.8     0.058297     0.039121     0.063493
Triad:           6566.4     0.057815     0.036550     0.063274
Triad:           6670.4     0.057821     0.035980     0.063413
Triad:           6277.6     0.057778     0.038231     0.063160
Triad:           6059.5     0.058016     0.039607     0.063139
you are not getting at least 20 clock ticks per test.
you are not getting at least 20 clock ticks per test.
you are not getting at least 20 clock ticks per test.
you are not getting at least 20 clock ticks per test.
Add:             5945.7     0.058594     0.040365     0.064154
Triad:           6587.2     0.058054     0.036434     0.063823
Triad:           6282.9     0.058472     0.038199     0.063912
Triad:           6247.1     0.058377     0.038418     0.063877
Triad:           6763.6     0.057697     0.035484     0.063404
Triad:           6644.5     0.058105     0.036120     0.063614
Triad:           6021.7     0.058294     0.039856     0.063387
Add:             5513.8     0.059131     0.043527     0.064355
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
Triad:           6943.8     0.059185     0.034563     0.065367
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
Triad:           6958.4     0.059476     0.034491     0.065091
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
This system uses 8 bytes per array element.
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
WARNING -- The above is only a rough guideline.
Solution Validates: avg error less than 1.000000e-13 on all three arrays
WARNING -- The above is only a rough guideline.
WARNING -- The above is only a rough guideline.
WARNING -- The above is only a rough guideline.
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
For best results, please be sure you know the
-------------------------------------------------------------
For best results, please be sure you know the
For best results, please be sure you know the
For best results, please be sure you know the
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Array size = 10000000 (elements), Offset = 0 (elements)
-------------------------------------------------------------
precision of your system timer.
precision of your system timer.
precision of your system timer.
precision of your system timer.
-------------------------------------------------------------
-------------------------------------------------------------
Memory per array = 76.3 MiB (= 0.1 GiB).
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
Total memory required = 228.9 MiB (= 0.2 GiB).
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Function    Best Rate MB/s  Avg time     Min time     Max time
Function    Best Rate MB/s  Avg time     Min time     Max time
Function    Best Rate MB/s  Avg time     Min time     Max time
Each kernel will be executed 10 times.
This system uses 8 bytes per array element.
Copy:            4103.4     0.043870     0.038992     0.046838
Copy:            4094.6     0.043931     0.039076     0.046905
Copy:            4120.8     0.043787     0.038827     0.046924
Copy:            4097.4     0.043897     0.039049     0.046755
 The *best* time for each kernel (excluding the first iteration)
-------------------------------------------------------------
Scale:           4484.3     0.043222     0.035680     0.046504
Scale:           4116.6     0.043764     0.038867     0.046434
Scale:           4424.1     0.043367     0.036166     0.046715
Scale:           4446.9     0.043336     0.035980     0.046780
 will be used to compute the reported bandwidth.
Array size = 10000000 (elements), Offset = 0 (elements)
Add:             4968.9     0.059215     0.048300     0.064788
Add:             4949.1     0.059368     0.048494     0.064930
Add:             4761.2     0.059560     0.050408     0.064971
Add:             4768.5     0.059483     0.050330     0.064690
-------------------------------------------------------------
Memory per array = 76.3 MiB (= 0.1 GiB).
Triad:           6954.3     0.058300     0.034511     0.065297
Triad:           7378.9     0.058085     0.032525     0.065275
Triad:           6560.9     0.058387     0.036580     0.065161
Triad:           6495.6     0.058479     0.036948     0.065277
Your clock granularity/precision appears to be 1 microseconds.
Total memory required = 228.9 MiB (= 0.2 GiB).
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
Each test below will take on the order of 31651 microseconds.
Each kernel will be executed 10 times.
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
   (= 31651 clock ticks)
 The *best* time for each kernel (excluding the first iteration)
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
Increase the size of the arrays if this shows that
 will be used to compute the reported bandwidth.
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
WARNING -- The above is only a rough guideline.
Each test below will take on the order of 31679 microseconds.
For best results, please be sure you know the
   (= 31679 clock ticks)
precision of your system timer.
Increase the size of the arrays if this shows that
-------------------------------------------------------------
you are not getting at least 20 clock ticks per test.
Function    Best Rate MB/s  Avg time     Min time     Max time
-------------------------------------------------------------
Copy:            5638.2     0.041911     0.028378     0.046417
WARNING -- The above is only a rough guideline.
Scale:           9538.6     0.040151     0.016774     0.046658
For best results, please be sure you know the
Add:             5714.4     0.059540     0.041999     0.065651
precision of your system timer.
Triad:           8436.8     0.057736     0.028447     0.065642
-------------------------------------------------------------
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Copy:           12282.2     0.040083     0.013027     0.046250
-------------------------------------------------------------
Scale:           9178.0     0.040423     0.017433     0.046409
Add:             5114.8     0.059782     0.046923     0.065557
Triad:           6915.0     0.058125     0.034707     0.065442
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 31811 microseconds.
   (= 31811 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            4339.3     0.043028     0.036872     0.046454
Scale:           4977.3     0.041913     0.032146     0.046644
Add:             7413.4     0.058247     0.032374     0.065699
Triad:          10122.7     0.057170     0.023709     0.065565
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 31538 microseconds.
   (= 31538 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            4362.9     0.042738     0.036673     0.046531
Scale:           4933.0     0.041794     0.032435     0.046287
Add:             5940.1     0.058988     0.040403     0.065535
Triad:          10449.8     0.057053     0.022967     0.065555
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
START OF JOBSPEC
{"resources": [{"type": "node", "count": 1, "exclusive": true, "with": [{"type": "slot", "count": 56, "with": [{"type": "core", "count": 1}], "label": "task"}]}], "tasks": [{"command": ["singularity", "exec", "/opt/containers/metric-stream_rocky-8.sif", "stream_c.exe"], "slot": "task", "count": {"per_slot": 1}}], "attributes": {"system": {"duration": 0, "cwd": "/home/sochat1_llnl_gov", "shell": {"options": {"rlimit": {"cpu": -1, "fsize": -1, "data": -1, "stack": 8388608, "core": 0, "nofile": 262144, "as": -1, "rss": -1, "nproc": 1803560}, "cpu-affinity": "per-task"}}, "constraints": {"hostlist": ["flux-029"]}}, "user": {"study_id": "stream-1-iter-1-node-29"}}, "version": 1}
START OF EVENTLOG
{"timestamp":1724808427.3445911,"name":"init"}
{"timestamp":1724808427.3453367,"name":"starting"}
{"timestamp":1724808427.3642678,"name":"shell.init","context":{"service":"1356918789-shell-ffiDKM7d","leader-rank":28,"size":1}}
{"timestamp":1724808427.4972608,"name":"shell.start","context":{"taskmap":{"version":1,"map":[[0,1,56,1]]}}}
{"timestamp":1724808428.9110043,"name":"shell.task-exit","context":{"localid":55,"rank":55,"state":"Exited","pid":5643,"wait_status":0,"signaled":0,"exitcode":0}}
{"timestamp":1724808430.0045085,"name":"complete","context":{"status":0}}
{"timestamp":1724808430.004581,"name":"done"}

